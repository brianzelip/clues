@import 'palette.css';

:root {
  /**
   * Primitives
   * darkest to lightest
   */
  --black-1: rgb(34, 34, 34); /* --black-dark*/
  --black-2: rgb(51, 51, 51); /* --black */
  --black-3: rgb(85, 85, 85); /* #555 was -white-barely, --darkest-grey*/
  --black-4: rgb(102, 102, 102); /* from darkmode th svg fill */
  --black-5: rgb(153, 153, 153); /* #999, --dark-grey */
  --black-6: rgb(221, 221, 221); /* #ddd, --grey  */
  --black-7: rgb(239, 239, 239); /* #efefef, replace --white-transp */
  --white: white;

  --blue: #0074d9;
  --green: #12b337;

  /* Main variants */
  --black: var(--black-2);
  --dark-grey: var(--black-5);
  --grey: var(--black-6);

  /**
   * UI - light mode styles
   */
  --background-color--lightmode: var(--white);
  --color--lightmode: var(--black-2);

  --table-border-color--lightmode: var(--black-6);
  --thead-th-background--lightmode: var(--black-6);
  --tbody-th-background--lightmode: var(--background-color--lightmode);
  --cell-border-color--lightmode: var(--black-6);
  --th-border-color--lightmode: var(--cell-border-color--lightmode);
  --td-border-color--lightmode: var(--cell-border-color--lightmode);
  --tbody-th-circle-border-color--lightmode: var(--color--lightmode);
  --tbody-th-strike-text-decoration--lightmode: var(--color--lightmode);

  --th-svg-fill--lightmode: var(--black-5);
  --th-svg-fill-hover--lightmode: var(--color--lightmode);

  --button-border-color--lightmode: var(--color--lightmode);
  --button-background--lightmode: var(--black-6);

  --unseen-svg-fill--lightmode: var(--black-5);
  --seen-svg-fill--lightmode: var(--color--lightmode);

  --row-hover-background--lightmode: var(--black-7);

  --link-color--lightmode: var(--blue);

  /**
   * UI - dark mode styles
   */
  --background-color--darkmode: var(--black-2);
  --color--darkmode: var(--white);

  --table-border-color--darkmode: var(--black-1);
  --thead-th-background--darkmode: var(--black-1);
  --tbody-th-background--darkmode: var(--background-color--darkmode);
  --cell-border-color--darkmode: var(--black-3);
  --th-border-color--darkmode: var(--cell-border-color--darkmode);
  --td-border-color--darkmode: var(--cell-border-color--darkmode);
  --tbody-th-circle-border-color--darkmode: var(--color--darkmode);
  --tbody-th-strike-text-decoration--darkmode: var(--color--darkmode);

  --th-svg-fill--darkmode: var(--black-4);
  --th-svg-fill-hover--darkmode: var(--color--darkmode);

  --button-border-color--darkmode: var(--color--darkmode);
  --button-background--darkmode: var(--black-1);

  --unseen-svg-fill--darkmode: var(--black-5);
  --seen-svg-fill--darkmode: var(--color--darkmode);

  --row-hover-background--darkmode: var(--black-1);

  --link-color--darkmode: var(--green);
}

/*
 * Border box by Tachyons - https://tachyons.io
 */

html,
body,
div,
article,
section,
main,
footer,
header,
form,
fieldset,
legend,
pre,
code,
a,
h1,
h2,
h3,
h4,
h5,
h6,
p,
ul,
ol,
li,
dl,
dt,
dd,
textarea,
table,
td,
th,
tr,
input[type='email'],
input[type='number'],
input[type='password'],
input[type='tel'],
input[type='text'],
input[type='url'],
.border-box {
  box-sizing: border-box;
}

html,
body,
.vh100 {
  min-height: 100vh;
}

body,
h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Helvetica, Arial,
    sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';
}

body {
  font-size: 0.875rem;
  transition: 0.15s;
}
@media only screen and (min-width: 960px) {
  body {
    font-size: 1rem;
  }
}

.container {
  max-width: 1200px;
}

.strike {
  text-decoration: line-through;
  text-decoration-thickness: 3px;
}

.circle {
  border-color: inherit;
}

.bg-mustard {
  background-color: #ffdb58;
}
.bg-scarlet {
  background-color: #ff2400;
}
.bg-plum {
  background-color: plum;
}
.bg-peacock {
  background-color: #33a1c9;
}
.bg-gray {
  background-color: #ddd;
}

.mr-auto {
  margin-right: auto;
}
.ml-auto {
  margin-left: auto;
}

/* Add/remove buttons */

.add,
.remove {
  position: relative;
  display: flex;
  align-items: center;
  appearance: none;
  background-color: inherit;
  font-size: 1.25rem;
  border: none;
}

.add:active,
.remove:active {
  top: 1px;
}

.add svg,
.remove svg {
  width: 0.75rem;
  transition: 0.15s;
}

.remove svg.rotate {
  transform: rotate(45deg);
}

/* COLOR */

/* Default color on page load with light/no color preference */
body.light {
  background-color: var(--background-color--lightmode);
  color: var(--color--lightmode);
}

body.light a {
  color: var(--link-color--lightmode);
}

body.light .add svg,
body.light .remove svg {
  fill: var(--th-svg-fill--lightmode);
}

body.light .add:hover svg,
body.light .remove:hover svg {
  fill: var(--th-svg-fill-hover--lightmode);
}

body.light table {
  border: 1px solid var(--table-border-color--lightmode);
}

body.light thead th {
  color: var(--color--lightmode);
  background-color: var(--thead-th-background--lightmode);
}

body.light tbody th {
  background-color: var(--tbody-th-background--lightmode);
}

body.light tr:not(.spacer):hover {
  background-color: var(--row-hover-background--lightmode);
}
body.light tbody tr:not(.spacer):hover th {
  background-color: var(--row-hover-background--lightmode);
}

body.light td,
body.light th {
  color: inherit;
  border-bottom-color: var(--cell-border-color--lightmode);
}
body.light td {
  border-left-color: var(--cell-border-color--lightmode);
}

body.light .circle {
  border-color: var(--tbody-th-circle-border-color--lightmode);
}

body.light .strike {
  text-decoration-color: var(--tbody-th-strike-text-decoration--lightmode);
}

body.light input.tracker {
  border-color: var(--button-border-color--lightmode);
  background-color: var(--button-background--lightmode);
}

body.light .unseen {
  fill: var(--unseen-svg-fill--lightmode);
}

body.light .seen {
  fill: var(--seen-svg-fill--lightmode);
}

/* Default color on page load with dark color preference */

body.dark {
  background-color: var(--background-color--darkmode);
  color: var(--color--darkmode);
}

body.dark a {
  color: var(--link-color--darkmode);
}

body.dark .add svg,
body.dark .remove svg {
  fill: var(--th-svg-fill--darkmode);
}

body.dark .add:hover svg,
body.dark .remove:hover svg {
  fill: var(--th-svg-fill-hover--darkmode);
}

body.dark table {
  border: 1px solid var(--table-border-color--darkmode);
}

body.dark thead th {
  color: var(--color--darkmode);
  background-color: var(--thead-th-background--darkmode);
}

body.dark tbody th {
  background-color: var(--tbody-th-background--darkmode);
}

body.dark tr:not(.spacer):hover {
  background-color: var(--row-hover-background--darkmode);
}
body.dark tbody tr:not(.spacer):hover th {
  background-color: var(--row-hover-background--darkmode);
}

body.dark td,
body.dark th {
  color: inherit;
  border-bottom-color: var(--cell-border-color--darkmode);
}
body.dark td {
  border-left-color: var(--cell-border-color--darkmode);
}

body.dark .circle {
  border-color: var(--tbody-th-circle-border-color--darkmode);
}

body.dark .strike {
  text-decoration-color: var(--tbody-th-strike-text-decoration--darkmode);
}

body.dark input.tracker {
  border-color: var(--button-border-color--darkmode);
  background-color: var(--button-background--darkmode);
}

body.dark .unseen {
  fill: var(--unseen-svg-fill--darkmode);
}

body.dark .seen {
  fill: var(--seen-svg-fill--darkmode);
}

/* Light colors for color pref and .page.light */
/* 
body {
  background-color: var(--background-color--lightmode);
  color: var(--color--lightmode);
}

.page.light {
  background-color: var(--background-color--lightmode);
  color: var(--color--lightmode);
}

.page.light a {
  color: var(--link-color--lightmode);
}

.page.light .add svg,
.page.light .remove svg {
  fill: var(--th-svg-fill--lightmode);
}

.page.light .add:hover svg,
.page.light .remove:hover svg {
  fill: var(--th-svg-fill-hover--lightmode);
}

.page.light table {
  border: 1px solid var(--table-border-color--lightmode);
}

.page.light thead th {
  color: var(--color--lightmode);
  background-color: var(--thead-th-background--lightmode);
}

.page.light tbody th {
  background-color: var(--tbody-th-background--lightmode);
}

.page.light tr:not(.spacer):hover {
  background-color: var(--row-hover-background--lightmode);
}
.page.light tbody tr:not(.spacer):hover th {
  background-color: var(--row-hover-background--lightmode);
}

.page.light td,
.page.light th {
  color: inherit;
  border-bottom-color: var(--cell-border-color--lightmode);
}
.page.light td {
  border-left-color: var(--cell-border-color--lightmode);
}

.page.light .circle {
  border-color: var(--tbody-th-circle-border-color--lightmode);
}

.page.light .strike {
  text-decoration-color: var(--tbody-th-strike-text-decoration--lightmode);
}

.page.light input.tracker {
  border-color: var(--button-border-color--lightmode);
  background-color: var(--button-background--lightmode);
}

.page.light .unseen {
  fill: var(--unseen-svg-fill--lightmode);
}

.page.light .seen {
  fill: var(--seen-svg-fill--lightmode);
} */

/* Dark colors for color pref and .page.dark */
/* body {
  background-color: var(--background-color--darkmode);
  color: var(--color--darkmode);
}

.page.dark {
  background-color: var(--background-color--darkmode);
  color: var(--color--darkmode);
}

.page.dark a {
  color: var(--link-color--darkmode);
}

.page.dark .add svg,
.page.dark .remove svg {
  fill: var(--th-svg-fill--darkmode);
}

.page.dark .add:hover svg,
.page.dark .remove:hover svg {
  fill: var(--th-svg-fill-hover--darkmode);
}

.page.dark table {
  border: 1px solid var(--table-border-color--darkmode);
}

.page.dark thead th {
  color: var(--color--darkmode);
  background-color: var(--thead-th-background--darkmode);
}

.page.dark tbody th {
  background-color: var(--tbody-th-background--darkmode);
}

.page.dark tr:not(.spacer):hover {
  background-color: var(--row-hover-background--darkmode);
}
.page.dark tbody tr:not(.spacer):hover th {
  background-color: var(--row-hover-background--darkmode);
}

.page.dark td,
.page.dark th {
  color: inherit;
  border-bottom-color: var(--cell-border-color--darkmode);
}
.page.dark td {
  border-left-color: var(--cell-border-color--darkmode);
}

.page.dark .circle {
  border-color: var(--tbody-th-circle-border-color--darkmode);
}

.page.dark .strike {
  text-decoration-color: var(--tbody-th-strike-text-decoration--darkmode);
}

.page.dark input.tracker {
  border-color: var(--button-border-color--darkmode);
  background-color: var(--button-background--darkmode);
}

.page.dark .unseen {
  fill: var(--unseen-svg-fill--darkmode);
}

.page.dark .seen {
  fill: var(--seen-svg-fill--darkmode);
} */

.v-middle {
  vertical-align: middle;
}

/* People items */
@media only screen and (min-width: 800px) {
  .green::before {
    content: 'Mr. ';
  }
  .mustard::before {
    content: 'Colonel ';
  }
  .peacock::before {
    content: 'Mrs. ';
  }
  .plum::before {
    content: 'Professor ';
  }
  .scarlet::before {
    content: 'Miss ';
  }
  .white::before {
    content: 'Mrs. ';
  }
}
